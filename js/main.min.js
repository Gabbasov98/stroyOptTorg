setPlaceholders()
function setPlaceholders(){
    $("[data-placeholder2]").each(function (i,el) {
        let placeholder = $(el).attr("data-placeholder")
        let placeholder2 = $(el).attr("data-placeholder2")


        if(window.innerWidth>576){
            $(el).attr("placeholder",placeholder)
        } else{
            $(el).attr("placeholder",placeholder2)
        }
    })
}


$("._tab").click(function() {
    let parentBlock = $(this).parents("._tabs-parent")
    let tabId = $(this).attr("data-tab")
    console.log(parentBlock)
    $(parentBlock).find("._tab").removeClass("_active")
    $(this).addClass("_active")
    $(parentBlock).find(".tab-content").removeClass("_active")
    $(parentBlock).find(`.${tabId}`).addClass("_active")
})

if(window.innerWidth<=577){
    $(".footer-group__show").click(function () {
        $(this).toggleClass("_active")
        $(this).siblings(".footer-group__hidden").slideToggle()
    })
}



function cartCalc() {
    $('.cartcalc .ccalc-minus').click(function(e) {
        let a = $(this).closest('.cartcalc').find('input').val();
        if (a > 1) {
            let b = +a - 1;
            $(this).closest('.cartcalc').find('input').val(b);
            $(this).closest('.cartcalc').find('input').trigger('change');
        } else {
            $(this).closest('.cartcalc').find('input').val(a);
        }
        e.stopImmediatePropagation()
    });

    $('.cartcalc .ccalc-plus').click(function(e) {
        let a = $(this).closest('.cartcalc').find('input').val();
        let b = +a + 1;
        $(this).closest('.cartcalc').find('input').val(b);
        $(this).closest('.cartcalc').find('input').trigger('change');
        e.stopImmediatePropagation()
    });

}

cartCalc()

$(".qa-card__show").click(function () {
    $(this).parents(".qa-card").toggleClass("_active")
    $(this).siblings(".qa-card__hidden").slideToggle()
})

let copyClipboard = document.querySelectorAll("._copy-clipboard")

copyClipboard.forEach(btn => {
    btn.onclick = function () {
        let copyTextarea = document.createElement("textarea");
        copyTextarea.style.position = "fixed";
        copyTextarea.style.opacity = "0";
        copyTextarea.textContent = this.getAttribute("data-text");

        document.body.appendChild(copyTextarea);
        copyTextarea.select();
        document.execCommand("copy");
        document.body.removeChild(copyTextarea);
    }
})

$(".pass-toggle").click(function () {
    if($(this).hasClass("_active")){
        $(this).removeClass("_active")
        $(this).siblings("input").attr("type","password")
    } else{
        $(this).addClass("_active")
        $(this).siblings("input").attr("type","text")
    }
})

$(".cookie-modal__btn").click(function () {
    $(".cookie-modal").removeClass("_active")
})

$(".burger").click(function () {
    $(".header").addClass("_open-menu")
    $("body").addClass("fixed-body")
})

$("._close-menu").click(function () {
    $(".header").removeClass("_open-menu")
    $("body").removeClass("fixed-body")
})


$(".catalog-btn").click(function () {
    $(".header").toggleClass("_open-catalog-menu")
    if(innerWidth<=992){
        $("body").addClass("fixed-body")
    }
})

$("._close-catalog-menu").click(function () {
    $(".header").removeClass("_open-catalog-menu")
    $("body").removeClass("fixed-body")
})

$(document).mouseup( function(e){
    let div = $( ".header" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        $(div).removeClass("_open-catalog-menu")
    }
});

$(".menu-item__show").click(function () {
    $(".menu-item2").removeClass("_open-menu3")
    $(".menu-item").removeClass("_open-menu2")
    $(this).parents(".menu-item").addClass("_open-menu2")
})

$(".menu-item2__show").click(function () {
    $(".menu-item2").removeClass("_open-menu3")
    $(this).parents(".menu-item2").addClass("_open-menu3")
})

$(".menu2 > .menu-top .menu-top__back").click(function () {
    $(".menu-item").removeClass("_open-menu2")
})

$(".menu3 > .menu-top .menu-top__back").click(function () {
    $(".menu-item2").removeClass("_open-menu3")
})

$(".menu-top__close").click(function () {
    $(".menu-item").removeClass("_open-menu2")
    $(".menu-item2").removeClass("_open-menu3")
    $(".header").removeClass("_open-catalog-menu")
    $("body").removeClass("fixed-body")
})


$(document).mouseup( function(e){
    var div = $( ".header-search" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(div).hasClass("_show-field")){
            $(div).removeClass("_show-field")
        }
        if($(div).hasClass("_show-dropdown")){
            $(div).removeClass("_show-dropdown")
        }
    }
});

$(".header-search .search-field input").on("input",function () {
    if($(this).val().length > 3){
        $(".header-search").addClass("_show-dropdown")
    }
})

function mainSlider() {
    var swiper = new Swiper('.main-slider .swiper-container', {
        slidesPerView: 1,
        spaceBetween: 10,
        loop: true,
        navigation: {
            nextEl: '.main-slider .swiper-button-next',
            prevEl: '.main-slider .swiper-button-prev',
        },
        pagination: {
            el: '.main-slider .swiper-pagination',
            type: 'bullets',
            clickable: true,
        },
    })
}

function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,
            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

function gallery() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".gallery")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)
        let gallery = {
            mySwiper: {},
            mySwiper2: {}
        }

        gallery.mySwiper = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper`, {
            spaceBetween: 0,
            slidesPerView: "auto",
            freeMode: true,
            watchSlidesProgress: true,
            direction: "vertical",
            loop: true,
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });
        gallery.mySwiper2 = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper2`, {
            spaceBetween: 0,
            direction: "vertical",
            loop: true,
            navigation: {
                nextEl: `.gallery[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.gallery[data-slider-id="${index}"] .swiper-button-prev`,
            },
            thumbs: {
                swiper:  gallery.mySwiper,
            },
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });

        SlidersArray[index] = gallery
    })

}

function compareSlider() {
    var swiper = new Swiper('.compare-slider .swiper-container', {
        slidesPerView: "auto",
        spaceBetween: 0,
        scrollbar: {
            el: '.compare-slider .swiper-scrollbar',
            draggable: true,
            snapOnRelease: true,
            dragSize: 'auto',
        },
    })
}

mainSlider()
gallery()
Sliders()
compareSlider()

$(".cart-btn,.favourite-btn,.compare-btn").click(function () {
    $(this).toggleClass("_added")
})

$(".filter-group__toggle").click(function () {
    let parent = $(this).parents(".filter-group")

    $(parent).toggleClass("_active")
    $(parent).find(".filter-group__bottom").slideToggle()
})

$(".mob-filter__btn").click(function () {
    $(".filter").toggleClass("_active")
    $("body").toggleClass("fixed-body")
})

$("._close-filter").click(function () {
    $(".filter").toggleClass("_active")
    $("body").toggleClass("fixed-body")
})


let filterSliders = document.querySelectorAll(".filter-slider")

filterSliders.forEach(slider => {
    const rangeSlider = slider.querySelector(`.range-slider`)
    const rangeInput0 = slider.querySelector(`.range-slider__input1`)
    const rangeInput1 = slider.querySelector(`.range-slider__input2`)
    const rangeInputs = [rangeInput0, rangeInput1]

    let startValue1 = +slider.getAttribute("data-start")
    let startValue2 = +slider.getAttribute("data-start2")
    let min = +slider.getAttribute("data-min")
    let max = +slider.getAttribute("data-max")

    if (rangeSlider) {
        noUiSlider.create(rangeSlider, {
            start: [startValue1, startValue2],
            connect: true,
            step: 1,
            range: {
                'min': min,
                'max': max
            }
        });
    }
    if (rangeSlider) {
        rangeSlider.noUiSlider.on('update', function(values, handle) {
            rangeInputs[handle].value = Math.round(values[handle])
        })
        rangeInputs.forEach((el, index) => {
            el.addEventListener('change', (e) => {
                setRangeSlider(index, e.currentTarget.value)
            })
        })
    }
    const setRangeSlider = (i, value) => {
        let array = [null, null];
        array[i] = value;

        rangeSlider.noUiSlider.set(array);
    };
})

$(".more-checkbox").click(function () {
    $(this).parents(".filter-group__checkboxes").addClass("_show-all")
})

$(".more-text ._line-btn").click(function () {
    $(this).parents(".more-text").siblings(".text").addClass("_show-all")
})

let body = document.querySelector(".m-page")
let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        openModal(modalId)
    }
})

function openModal(modalId) {
    let modal = document.querySelector(`#${modalId}`)
    let closeButtons = modal.querySelectorAll(`._close-modal`)

    modal.classList.add("_active")
    body.classList.add("fixed-body2")


    closeButtons.forEach(btn => {
        btn.onclick = ()=> {
            modal.classList.remove("_active")
            body.classList.remove("fixed-body2")
        }
    })
}

var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();


$("._all-props").click(function () {
    $(".catalog-item2").find("[data-tab='_tab1']").click()
})

calcCartItemsTotalPrice()

function calcCartItemsTotalPrice() {
    $(".cart-item").each(function (i,el) {
        let count = +$(el).find(".cartcalc input").val()
        let price = +$(el).find("._price").attr("data-price")

        $(el).find("._price").html(price.toLocaleString())
        $(el).find("._price-total").html((price * count).toLocaleString())
    })
}


$(".cart-item .cartcalc input").change(function () {
    calcCartItemsTotalPrice()
})

$(".cart-sum__promo .cart-sum__btn").click(function () {
    $(".cart-sum__promo").addClass("_applied")
})

$(".order-login__btn").click(function () {
    $(".order-login__hidden").slideToggle()
})

$(".order-promo__toggle").click(function () {
    $(".order-promo__bottom").slideToggle()
})


setDeliveryTypeFields()
$("input[name='deliveryWay']").change(function () {
    setDeliveryTypeFields()
})

function setDeliveryTypeFields() {
    let checkedVal = $("input[name='deliveryWay']:checked").val()

    if(!checkedVal){
        return
    }

    $(".order-address").removeClass("_active")

    if(checkedVal !== "self"){
        $(".order-address").addClass("_active")
    }
}

// let fileInputs = document.querySelectorAll(".file-input")
//
// fileInputs.forEach(fileInput => {
//     let field = fileInput.querySelector("input")
//
//     field.onchange = function (evt) {
//         var tgt = evt.target || window.event.srcElement,
//             files = tgt.files;
//
//         for (let i = 0; i < files.length; i++) { // выведет 0, затем 1, затем 2
//             if (FileReader && files && files.length) {
//                 let fr = new FileReader();
//
//                 fr.onload = function () {
//                     // document.getElementById(outImage).src = fr.result;
//                     console.log(fr)
//                     console.log(fr.result)
//                 }
//                 fr.readAsDataURL(files[i]);
//             }
//         }
//
//     }
// })
//


$(".file-input input").change(function () {
    let parent = $(this).parents(".file-input")

    if (typeof (FileReader) != "undefined") {
        let dvPreview = $(parent).find(".file-input__upload");

        let regex = /^([a-zA-Z0-9\s_\\.\-:])+(.jpg|.jpeg|.gif|.png|.bmp)$/;
        $($(this)[0].files).each(function () {
            let file = $(this);
            if (regex.test(file[0].name.toLowerCase())) {
                let reader = new FileReader();
                reader.onload = function (e) {
                    let img = `
                    <div class="upload-file">
                        <div class="upload-file__img">
                            <img src="${e.target.result}" alt="">
                        </div>
                        <button type="button" class="upload-file__remove">
                            <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <circle opacity="0.8" cx="9.5" cy="9.5" r="9.5" fill="black"/>
                                <path d="M12.955 6.04541L6.0459 12.9545M6.0459 6.04541L12.955 12.9545" stroke="white" stroke-width="1.4" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                        </button>
                    </div>
                    `
                    dvPreview.append(img)
                    $(parent).addClass("_uploaded")
                }
                reader.readAsDataURL(file[0]);
            } else {
                alert(file[0].name + " is not a valid image file.");
                dvPreview.html("");
                return false;
            }

            $(document).on('click', '.upload-file__remove', function(e) {
                let uploadedFilesCount = $(parent).find(".upload-file").length
                $(this).parents(".upload-file").remove()
                if(uploadedFilesCount < 1){
                    $(parent).removeClass("_uploaded")
                }
            })
        });
    } else {
        alert("This browser does not support HTML5 FileReader.");
    }
});

$(document).ready(function() {
    $('input[type="tel"]').mask('+7 (999) 999-99-99', { autoclear: false }, { placeholder: '+7 (   )    -  -  ' });
    $(".fg select").niceSelect()

    getScrollBarSize()

    fix100vh()
    $(window).resize(function () {
        fix100vh()
        setPlaceholders()
        getScrollBarSize()
    })
});

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
